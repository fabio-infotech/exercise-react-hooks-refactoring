{"ast":null,"code":"var _jsxFileName = \"/home/fabio/Documentos/Trybe_Curso_Turma_8/trybe-exercises/exercises/exercise-react-hooks-refactoring/src/context/Provider.js\";\n// src/context/Provider.js\nimport React, { createContext, useState } from 'react';\nconst Context = createContext();\n\nconst CarsProvider = ({\n  children\n}) => {\n  const [cars, setCars] = useState({\n    red: false,\n    blue: false,\n    yellow: false\n  });\n\n  const moveCar = (car, side) => {\n    setCars({ ...cars,\n      [car]: side\n    });\n  };\n\n  const context = {\n    cars,\n    moveCar\n  };\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { Context, CarsProvider as Provider };","map":{"version":3,"sources":["/home/fabio/Documentos/Trybe_Curso_Turma_8/trybe-exercises/exercises/exercise-react-hooks-refactoring/src/context/Provider.js"],"names":["React","createContext","useState","Context","CarsProvider","children","cars","setCars","red","blue","yellow","moveCar","car","side","context","Provider"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,MAAMC,OAAO,GAAGF,aAAa,EAA7B;;AAEA,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAC/BM,IAAAA,GAAG,EAAE,KAD0B;AAE/BC,IAAAA,IAAI,EAAE,KAFyB;AAG/BC,IAAAA,MAAM,EAAE;AAHuB,GAAD,CAAhC;;AAMA,QAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC7BN,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACM,GAAD,GAAOC;AAFD,KAAD,CAAP;AAID,GALD;;AAOA,QAAMC,OAAO,GAAG;AAAER,IAAAA,IAAF;AAAQK,IAAAA;AAAR,GAAhB;AAEA,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEG,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,CADF;AAKD,CArBD;;AAuBA,SAASF,OAAT,EAAkBC,YAAY,IAAIW,QAAlC","sourcesContent":["// src/context/Provider.js\n\nimport React, { createContext, useState } from 'react';\n\nconst Context = createContext();\n\nconst CarsProvider = ({ children }) => {\n  const [cars, setCars] = useState({\n    red: false,\n    blue: false,\n    yellow: false,\n  });\n\n  const moveCar = (car, side) => {\n    setCars({\n      ...cars,\n      [car]: side,\n    });\n  };\n\n  const context = { cars, moveCar };\n\n  return (\n    <Context.Provider value={context}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport { Context, CarsProvider as Provider };\n"]},"metadata":{},"sourceType":"module"}